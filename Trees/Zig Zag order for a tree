import java.util.List;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {

        

        List<List<Integer>> result = new LinkedList();
        if(root == null)
        return result;

        Queue<TreeNode> que = new LinkedList();

       

        boolean flag = false;

        que.add(root);

        while(!que.isEmpty()){

             List<Integer> level = new LinkedList();
              Stack<Integer> st = new Stack();

            int size = que.size();

            for(int i= 0 ; i< size; i++){
                TreeNode xx = que.poll();


                    if(flag){
                        st.push(xx.val);

                    }
                    else{
                        level.add(xx.val);
                    }
            if(xx.left!=null){
                que.add(xx.left);
            }
             if(xx.right!=null){
                que.add(xx.right);
            }

            }
            flag = !flag;

        while(!st.isEmpty()){
            level.add(st.pop());

        }


        result.add(level);

        }

            return result;
    }
}
