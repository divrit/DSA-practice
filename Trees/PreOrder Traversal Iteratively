/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    LinkedList ls = new LinkedList();
    public List<Integer> preorderTraversal(TreeNode root) {
          

            List<Integer> ls = new LinkedList();
            Stack<TreeNode> st = new Stack();
            st.push(root);


            if(root == null){
                return ls;
            }
            while(!st.isEmpty()){
                TreeNode x = st.pop();

                ls.add(x.val);
                if(x.right!=null){
                    st.push(x.right);
                }

                
                if(x.left!=null){
                    st.push(x.left);
                }
            }

        return ls;
}
}
