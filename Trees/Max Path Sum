/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxPathSum(TreeNode root) {
        if(root.left==null && root.right== null)
        return root.val;

max(root);
            return maxI;
    }


    int maxI = Integer.MIN_VALUE;;
    public int max(TreeNode root){

        if(root == null){
            return 0;
        }


        int left = Math.max(0,max(root.left));
        int right =Math.max(0,max(root.right));

        maxI = Math.max(maxI, left+right+root.val);

            return root.val + Math.max(left,right);


    }
}
