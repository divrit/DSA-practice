/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> ls = new LinkedList();
        Stack<TreeNode> st = new Stack();
         TreeNode last = null;
        while(root!= null || !st.isEmpty()){

                if(root!=null){
                    st.push(root);
                    root = root.left;
                }


                else{   
                       
                        TreeNode temp = st.peek();
                        if(temp.right!=null && temp.right!= last){
                            root = temp.right;
                        }
                        else{
                            ls.add(temp.val);
                            last = st.pop();
                        }


                }


        }

return ls;

        
    }
}
