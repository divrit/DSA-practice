// we are using an extra DS here which is Queue, which makes it have space complexity of o(n).

/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public int solve(TreeNode A) {

        Queue<TreeNode> q = new LinkedList();


        q.offer(A);
        int sum = 0;

        while(!q.isEmpty()){
            
            int size =q.size();
           

            for(int i = 0;i <size; i++){
                 TreeNode current = q.poll();
            sum +=current.val;

                if(current.left!=null){
                    q.offer(current.left);
                }

                if(current.right!=null){
                    q.offer(current.right);
                }

            }

        }

return sum;
    }
}
