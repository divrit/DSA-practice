/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public int[] preorderTraversal(TreeNode A) {

        Stack<TreeNode> st = new Stack();
        List<Integer> result = new LinkedList();

        TreeNode current = A;
        st.push(current);
        while(!st.isEmpty()){
         
            TreeNode node = st.pop();
            result.add(node.val);


            if(node.right != null){
                  
                    st.push( node.right);

            }
            if(node.left != null){
                  
                    st.push( node.left);
            }

           
    

        }

        return result.stream().mapToInt(i -> i).toArray();

    }
}
