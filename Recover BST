/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
 TreeNode first = null;
    TreeNode prev = null;
    TreeNode last = null;
    TreeNode middle = null;
    public void recoverTree(TreeNode root) {

       inorder(root);

       if(last == null){
           int x = middle.val;
           middle.val = first.val;
           first.val = x;
       }
       else{
           int x  = first.val;
           first.val = last.val;
           last.val = x;
       }




}


    public void inorder(TreeNode root){
        if(root == null){
            return ;
        }
         inorder(root.left);

        if(prev != null && (prev.val > root.val)){
            if(middle == null){
                first = prev;
                middle = root;
            }else{
                last = root ;
            }
        }



            prev = root;
             inorder(root.right);
}
        
    }
